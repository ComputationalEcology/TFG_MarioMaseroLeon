library(sp)
library(raster)
library(rgdal)
las = readLAS("prueba.laz", select = "xyz", filter = "-keep_first")
shape <- readOGR("E:/TFG/prueba/shapefile/prueba.shp")
plot(shape)
shapefile_dir <- system.file("extdata", package = "lidR")
lakes = rgdal::readOGR(shapefile_dir, "E:/TFG/prueba/shapefile/prueba.shp")
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyz", filter = "-keep_first")
las_check(las)
plot(las)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyz", filter = "-keep_first")
las_check(las)
plot(las)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyz", filter = "-keep_first")
las_check(las)
plot(las, color = "RGB")
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada2.laz", select = "xyz", filter = "-keep_first")
las_check(las)
plot(las, color = "RGB")
plot(las, color = "Intensity", breaks = "quantile", bg = "white")
plot(las, color = "Intensity", breaks = "quantile", bg = "white")
plot(las)
las = readLAS("Trianarecortada.laz")
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyz", filter = "-keep_first")
las_check(las)
plot(las)
tierra <- classify_ground(las)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyz", filter = "-keep_first")
las_check(las)
plot(las, bg = "white")
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
las_check(las)
plot(las, bg = "white")
plot(las, size = 3, bg = "white")
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
opt_output_files(las) <- paste0(tempdir(), "{*}_classified")
classified_las <- classify_ground(las, csf())
install.packages(RCSF)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
alturas <- calc_heights_from_lidar(las)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
#Obtener raster de alturas (1 m2)
alturas <- calc_heights_from_lidar(las)
View(las)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
comparar = readLAS("prueba.laz", select = "xyzc", filter = "-keep_first")
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
#Obtener raster de alturas (1 m2)
alturas <- calc_heights_from_lidar(las)
View(comparar)
comparar@data[["Classification"]]
View(comparar)
library(CityShadeMapper)
plot(alturas)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
#Obtener raster de alturas (1 m2)
alturas <- calc_heights_from_lidar(las)
alturas <- calc_heights_from_lidar(las)
comparar = readLAS("prueba.laz", select = "xyzc", filter = "-keep_first")
library(CityShadeMapper)
alturas <- calc_heights_from_lidar(comparar)
alturas <- calc_heights_from_lidar(las)
sombra <- make_shademap_ground(las)
sombra <- make_shademap(las, date = "2023-04-01", hour = 15)
rasterize_lidar_cover_class(
las = las,
res = 1,
fill.holes = TRUE,
filename = NULL
)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
rasterize_lidar_cover_class(
las = las,
res = 1,
fill.holes = TRUE,
filename = NULL
)
View(comparar)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
rasterize_lidar_cover_class(
las = las,
res = 1,
fill.holes = TRUE,
filename = NULL
)
plot(las, size = 3, bg = "white")
rasterize_lidar_cover_class(las)
rasterize_lidar_cover_class("Trianarecortada.laz")
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
#Obtener raster de alturas (1 m2)
alturas <- calc_heights_from_lidar(las)
alturas <- calc_heights_from_lidar(triana.cover)
alturas <- calc_heights_from_lidar("Trianarecortada.laz")
View(triana.cover)
sombra <- make_shademap(triana.cover, date = "2023-04-01", hour = 15)
library(CityShadeMapper)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc", filter = "-keep_first")
#las_check(las)
plot(las, size = 3, bg = "white")
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
#Obtener raster de alturas (1 m2)
alturas <- calc_heights_from_lidar(triana.cover)
las
triana.cover
plot(triana.cover)
alturas <- calc_heights_from_lidar(triana.cover)
alturas <- calc_heights_from_lidar(las)
sombra <- make_shademap(triana.cover, date = "2023-04-01", hour = 15)
?CityShadeMapper
plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
install.packages(mapview)
install.packages("https://github.com/r-spatial/mapview")
install.packages("mapview")
library(mapview)
plot(ctg, mapview = TRUE, map.type = "Esri.WorldImagery")
plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
alturas <- calc_heights_from_lidar(las)
heights <- calc_heights_from_lidar(las)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz", select = "xyzc")
#las_check(las)
#Para ver la zona de estudio en un mapa
#plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
#Para ver en 3D la nube de puntos
plot(las, size = 3)
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
plot(triana.cover)
heights <- calc_heights_from_lidar(las)
heights <- calc_heights_from_lidar(las)
las = readLAS("Trianarecortada.laz")
plot(las, size = 3)
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
plot(triana.cover)
heights <- calc_heights_from_lidar(las)
triana.canopy <- make_shademap(heights, date = "2022-10-15", hour = 13)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
plot(triana.cover)
plot_shademap(triana.cover)
plot_shademap(triana.cover, legend = FALSE, animate = TRUE, smooth = TRUE)
plot(triana.cover)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz")
#las_check(las)
#Para ver la zona de estudio en un mapa
#plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
#Para ver en 3D la nube de puntos
plot(las, size = 3)
#Crear raster para la clasificación de los puntos
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
plot(triana.cover)
#Calcular alturas
heights <- calc_heights_from_lidar(las)
triana.canopy <- make_shademap(heights, date = "2022-10-15", hour = 13)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
triana.canopy <- make_shademap(heights, date = "2024-04-03", hour = 10)
plot_shademap(triana.canopy, legend = FALSE, animate = TRUE, smooth = TRUE)
triana.ground <- make_shademap(heights, date = "2022-10-15", hour = 13,
type = "ground", cover.ras = triana.cover)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
triana.canopy
triana.cover
heights
plot(heights)
plot(triana.canopy)
plot(triana.cover)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
las = readLAS("Trianarecortada.laz")
#las_check(las)
#Para ver la zona de estudio en un mapa
#plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
#Para ver en 3D la nube de puntos
plot(las, size = 3)
#Crear raster para la clasificación de los puntos
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
plot(triana.cover)
plot(triana.cover)
plot(heights)
heights <- calc_heights_from_lidar(las)
plot(heights)
triana.canopy <- make_shademap(heights, date = "2024-04-03", hour = 10)
plot(triana.canopy)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
plot(triana.canopy)
triana.canopy
triana.cover
cropped = crop(triana.cover, triana.canopy)
cropped
triana.cover
triana.canopy
triana.cover = crop(triana.cover, triana.canopy)
triana.canopy
triana.cover
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
View(cropped)
View(cropped)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
triana.ground <- make_shademap(heights, date = "2022-10-15", hour = 13,
type = "ground", cover.ras = cover.ras)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
triana.ground <- make_shademap(heights, date = "2022-10-15", hour = 13,
type = "ground", cover.ras = cover.ras)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
las = readLAS("Trianarecortada.laz")
#las_check(las)
#Para ver la zona de estudio en un mapa
#plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
#Para ver en 3D la nube de puntos
plot(las, size = 3)
#Crear raster para la clasificación de los puntos
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
plot(triana.cover)
#Calcular alturas
heights <- calc_heights_from_lidar(las)
#Calcular mapa de sombras
triana.canopy <- make_shademap(heights, date = "2024-04-03", hour = 10)
triana.cover = crop(triana.cover, triana.canopy)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
#Representar mapa de sombra
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
las = readLAS("Trianarecortada.laz")
#las_check(las)
#Para ver la zona de estudio en un mapa
#plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
#Para ver en 3D la nube de puntos
plot(las, size = 3)
#Crear raster para la clasificación de los puntos
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
plot(triana.cover)
#Calcular alturas
heights <- calc_heights_from_lidar(las)
triana.ground <- make_shademap(heights, date = "2022-10-15", hour = 13,
type = "ground", cover.ras = cover.ras)
triana.canopy <- make_shademap(heights, date = "2023-09-29", hour = 15:51)
triana.canopy <- make_shademap(heights, date = "2023-09-29", hour = 15)
triana.cover = crop(triana.cover, triana.canopy)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
#Representar mapa de sombra
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
triana.canopy <- make_shademap(heights, date = "2023-09-29", hour = 15:17)
triana.cover = crop(triana.cover, triana.canopy)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
#Representar mapa de sombra
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
las
shade.route <- calc_shaded_route("Calle San Jacinto, Sevilla", "Calle Castilla", triana.ground)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
triana.ground
install.packages("leaflet")
shade.route <- calc_shaded_route("Calle San Jacinto, Sevilla", "Calle Castilla", triana.ground)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
shade.route <- calc_shaded_route("Calle San Jacinto, Sevilla", "Calle Castilla, Sevilla", triana.ground)
shade.route <- calc_shaded_route("Calle San Jacinto, Sevilla", "Ronda de Triana, Sevilla", triana.ground)
triana.ground
plot(triana.ground)
plot(triana.ground, mapview = TRUE, map.type = "Esri.WorldImagery")
plot(triana.ground, mapview = TRUE, map.type = "Esri.WorldImagery")
warnings()
plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
plot(heights, mapview = TRUE, map.type = "Esri.WorldImagery")
las = readLAS("Trianarecortada.laz")
#las_check(las)
#Para ver la zona de estudio en un mapa
#plot(las, mapview = TRUE, map.type = "Esri.WorldImagery")
#Para ver en 3D la nube de puntos
plot(las, size = 3)
#Crear raster para la clasificación de los puntos
triana.cover <- rasterize_lidar_cover_class("Trianarecortada.laz")
plot(triana.cover)
#Calcular alturas
heights <- calc_heights_from_lidar(las)
#Calcular mapa de sombras
triana.canopy <- make_shademap(heights, date = "2023-09-29", hour = 13:15)
plot_shademap(triana.canopy)
shade.route <- calc_shaded_route("Calle San Jacinto, Sevilla", "Ronda de Triana, Sevilla", triana.canopy)
lidar <- read_lidar(system.file("extdata", "PlazaNueva.laz", package = "CityShadeMapper"))
cover.ras <- rasterize_lidar_cover_class(lidar)
shaderas <- make_shademap(heights, date = "2022-10-15", hour = 13,
type = "ground", cover.ras = cover.ras)
## Not run:
lidar <- PlazaNueva()
heights <- calc_heights_from_lidar(lidar)
shaderas <- make_shademap(heights, date = "2022-10-15", hour = 13)
plot_shademap(shaderas, smooth = TRUE)
## Ground-level shade maps require additional raster with cover classes
lidar <- read_lidar(system.file("extdata", "PlazaNueva.laz", package = "CityShadeMapper"))
cover.ras <- rasterize_lidar_cover_class(lidar)
shaderas <- make_shademap(heights, date = "2022-10-15", hour = 13,
type = "ground", cover.ras = cover.ras)
plot_shademap(shaderas, smooth = TRUE)
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shade.route <- calc_shaded_route("Plaza Nueva, Sevilla", "Mateos Gago, Sevilla", shaderas)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
enero.ground <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shade.route <- calc_shaded_route("Plaza Nueva, Sevilla", "Mateos Gago, Sevilla", enero.ground)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
enero.ground <- terra::rast("/vsicurl/https://zenodo.org/records/7212277/files/Sevilla_shademap_january_ground_cog.tif")
shade.route <- calc_shaded_route("Plaza Nueva, Sevilla", "Mateos Gago, Sevilla", enero.ground)
enero.ground <- terra::rast("/vsicurl/https://zenodo.org/records/7212277/files/Sevilla_shademap_january_ground_cog.tif")
View(enero.ground)
enero.ground <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shade.route <- calc_shaded_route("Plaza Nueva, Sevilla", "Mateos Gago, Sevilla", enero.ground)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
shade.route <- calc_shaded_route("Plaza Nueva, Sevilla", "Mateos Gago, Sevilla", enero.ground)
enero.ground <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shade.route <- calc_shaded_route("San Jacinto, Sevilla", "Mateos Gago, Sevilla", enero.ground)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
shade.route <- calc_shaded_route("San Jacinto, Sevilla", "Mateos Gago, Sevilla", "january_ground_cog.tif")
enero.ground = "january_ground_cog.tif"
plot(enero.ground)
shade.route <- calc_shaded_route("San Jacinto, Sevilla", "Mateos Gago, Sevilla", enero.ground)
enero.ground = raster("january_ground_cog.tif")
install.packages("raster")
install.packages("raster")
library(raster)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(raster)
library(sf)
enero.ground = raster("january_ground_cog.tif")
enero.ground = raster("january_ground_cog.tif")
shade.route <- calc_shaded_route("San Jacinto, Sevilla", "Mateos Gago, Sevilla", enero.ground)
enero.ground
suelo = "january_ground_cog.tif"
suelo
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m7_h13_ground.tif")
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m1_h12_ground.tif")
shade.route <- calc_shaded_route("Plaza Nueva, Sevilla", "Mateos Gago, Sevilla", shaderas)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
shade.route <- calc_shaded_route("Ronda de Triana, Sevilla", "San Jacinto, Sevilla", shaderas)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
shade.route <- calc_shaded_route("Alfareria, Sevilla", "San Jacinto, Sevilla", shaderas)
shade.route <- calc_shaded_route("Calle Alfareria, Sevilla", "San Jacinto, Sevilla", shaderas)
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m1_h12_ground.tif")
shade.route <- calc_shaded_route("Ronda de Triana, Sevilla", "San Jacinto, Sevilla", shaderas)
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m1_h12_ground.tif")
shade.route <- calc_shaded_route("Ronda de Triana, Sevilla", "San Jacinto, Sevilla", shaderas)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
shaderas <- terra::rast("/vsicurl/https://zenodo.org/record/7213637/files/m1_h12_ground.tif")
shade.route <- calc_shaded_route("Calle Castilla, Sevilla", "San Jacinto, Sevilla", shaderas)
library(leaflet)
leaflet(sf::st_as_sf(shade.route)) |>
leaflet::addWMSTiles(baseUrl = "https://www.ign.es/wms-inspire/ign-base",
layers = "IGNBaseTodo-nofondo") |>
leaflet::addTiles(urlTemplate =
"https://mapasdesombra.github.io/Sevilla-jul-ground/13/{z}/{x}/{y}.png",
options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
