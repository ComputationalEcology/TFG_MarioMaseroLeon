options = leaflet::tileOptions(minZoom = 15, maxZoom = 18, tms = TRUE, opacity = 0.4)) |>
addPolylines(weight = 8, opacity = 0.8)
las = readLAS("triana.laz")
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(mapview)
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
las = readLAS("triana.laz")
triana.ground <- rast("test.tif")
hasValues(triana.ground)
#Crear mapa calle Triana
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
#Mostrar mapa
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
#Extraer sombra media de las calles
trianavect <- st_as_sf(trianamapa)
plot(trianavect[0])
mapview(trianavect)
library(tmap)
install.packages(maptiles)
install.packages("maptiles")
tmap <- get_tiles(trianavect, zoom = 7, crop = TRUE)
library(maptiles)
tmap <- get_tiles(trianavect, zoom = 7, crop = TRUE)
plot(tmap)
rm(tmap)
tm_shape(bmap) +
tm_rgb(alpha = 0.3) +
tm_shape(trianavect) +
tm_symbols(size = "Casos"
, scale = 1.5, title.size = "Casos por municipio") +
tm_layout(legend.position = c("right"
,
"bottom"),
inner.margins = c(0.03, 0.01, 0.02, 0.01)) +
tm_credits(get_credit("Stamen.Watercolor"), size = 0.4, position = c(0.02, 0))
view(trianavect)
tmap_mode("plot")
tm_shape(triana.ground) +
tm_polygons(col = "white") +
tm_shape(trianavect) +
tm_dots()
GTIFF_SRS_SOURCE
tmap_mode("plot")
tm_shape(triana.ground) +
tm_polygons(col = "white") +
tm_shape(trianavect) +
tm_dots()
View(triana.ground)
test <- st_read(triana.ground)
tmap_mode("plot")
tm_shape(test) +
tm_polygons(col = "white") +
tm_shape(trianavect) +
tm_dots()
test <- st_read(triana.ground)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(mapview)
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
triana.ground <- rast("test.tif")
hasValues(triana.ground)
plot(triana.ground)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
las = readLAS("triana.laz")
triana.cover <- rasterize_lidar_cover_class("triana.laz")
heights <- calc_heights_from_lidar(las)
triana.canopy <- make_shademap(heights, date = "2023-09-29", hour = 14)
triana.cover = crop(triana.cover, triana.canopy)
triana.ground <- make_shademap_ground(triana.canopy, triana.cover)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
plot(triana.ground)
view(triana.ground)
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
#Mostrar mapa
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
#Extraer sombra media de las calles
trianavect <- st_as_sf(trianamapa)
mapview(trianavect)
plot(tmin.sp, y = 1, axes = FALSE)
plot(test, y = 1, axes = FALSE)
plot(triana.ground, y = 1, axes = FALSE)
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE)
plot(trianavect, add = TRUE)
plot(triana.ground, y = 1, axes = FALSE)
plot(trianavect[0], add = TRUE)
global(triana.ground, "mean")
global(triana.ground, "mean", na.rm = TRUE)
plot(vect(trianavect))
plot(vect(trianavect), axes = FALSE)
plot(triana.ground, y = 1, add = TRUE)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(mapview)
#Leer nube de puntos
las = readLAS("triana.laz")
las_check(las)
triana.ground <- rast("test.tif")
hasValues(triana.ground)
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
#Crear mapa calle Triana
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
#Mostrar mapa
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
#Extraer sombra media de las calles
trianavect <- st_as_sf(trianamapa)
mapview(trianavect)
global(triana.ground, "mean", na.rm = TRUE)
plot(triana.ground, y = 1, axes = FALSE)
plot(vect(trianavect), add = TRUE)
library(RColorBrewer)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Blues"))
plot(vect(trianavect), add = TRUE)
plot_shademap(triana.ground, legend = FALSE, animate = TRUE, smooth = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "RdBu"))
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(6, "Reds"))
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "RdBu"))
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "BuRd"))
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "BrBG"))
plot(vect(trianavect), add = TRUE)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "PiYG"))
plot(vect(trianavect), add = TRUE)
BuRdTheme()
install.packages("rasterVis")
install.packages("rasterVis")
library(RColorBrewer)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
library(RColorBrewer)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
library(RColorBrewer)
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
plot(triana.ground, y = 1, axes = FALSE, col = brewer.pal(9, "Reds"))
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
#Crear mapa calle Triana
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
#Mostrar mapa
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
#Extraer sombra media de las calles
trianavect <- st_as_sf(trianamapa)
mapview(trianavect)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(mapview)
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
#Crear mapa calle Triana
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
#Mostrar mapa
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
#Extraer sombra media de las calles
trianavect <- st_as_sf(trianamapa)
mapview(trianavect)
global(triana.ground, "mean", na.rm = TRUE)
global(triana.ground, "mean", na.rm = TRUE)
global(triana.ground, "mean", na.rm = TRUE)
global(triana.ground, "mean", na.rm = TRUE)
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(mapview)
las = readLAS("triana.laz")
triana.ground <- rast("test.tif")
hasValues(triana.ground)
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
#Mostrar mapa
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
#Extraer sombra media de las calles
trianavect <- st_as_sf(trianamapa)
mapview(trianavect)
global(triana.ground, "mean", na.rm = TRUE)
#RepresentaciÃ³n
library(RColorBrewer)
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd", colorblindFriendly = TRUE))
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd", colorblindFriendly=FALSE))
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
plot(vect(trianavect), add = TRUE)
calles <- trianavect |>
group_by(name) |>
summarise()
View(calles)
plot(calles)
sombra.calles <- extract(triana.ground, vect(calles))
head(tmin.prov)
head(sombra.calles)
View(sombra.calles)
head(sombra.calles)
sombra.calles <- extract(triana.ground, vect(calles), fun = "mean", na.rm = TRUE)
head(sombra.calles)
View(sombra.calles)
round(sombra.calles, 2)
View(sombra.calles)
head(sombra.calles)
sombra.calles <- round(sombra.calles, 2)
View(sombra.calles)
View(calles)
View(calles)
mask <- st_read("Shape/plantilla.shp")
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
plot(vect(trianavect), add = TRUE)
plot(vect(mask), add = TRUE)
plot(mask, add = TRUE)
View(mask)
View(mask)
plot(mask$geometry, add = TRUE)
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
plot(vect(trianavect), add = TRUE)
plot(mask$geometry, add = TRUE)
plot(sombra.calles)
plot(vect(sombra.calles))
mask <- st_read("Shape/plantilla.shp", quiet = TRUE)
plot(vect(triana.ground))
test <- st_filter(sombra.calles, mask)
mask <- st_read("Shape/plantilla.shp", quiet = TRUE, crs = triana.ground)
mask <- st_read("Shape/plantilla.shp", quiet = TRUE)
mask <- st_transform(mask, crs = st_crs(triana_bbox))
plot(mask)
plot(mask$geometry)
test <- st_filter(sombra.calles, mask)
rm(mask)
mask <- st_read(las)
mask <- st_read(triana.ground)
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(mapview)
las = readLAS("triana.laz")
triana.ground <- rast("test.tif")
hasValues(triana.ground)
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
mask <- st_read("Data/Distritos_de_Sevilla")
mask <- st_read("Data/Distritos_de_Sevilla.shp")
mask <- st_transform(mask, crs = st_crs(triana_bbox))
plot(mask)
plot(mask$Superficie)
plot(mask$Area)
plot(mask)
plot(mask[7])
mapview(mask[7])
triana_bbox
crs(triana_bbox)
mask <- st_transform(mask, crs = st_crs(trianamapa))
mask
trianamapa
st_crs(mask)
st_crs(trianamapa)
mask <- st_set_crs(st_crs(trianamapa))
st_set_crs(mask, EPSG:25829)
st_set_crs(mask, "EPSG:25829")
st_crs(mask)
mask <- st_set_crs(mask, st_crs(trianamapa))
st_crs(mask)
mapview(mask)
mapview(trianavect)
trianamapa <- st_filter(trianamapa, mask)
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
trianavect <- st_as_sf(trianamapa)
mapview(trianavect)
plot(mask[7])
rm(mask)
rm(trianamapa)
rm(trianavect)
plot(triana_bbox)
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
mapview(trianamapa)
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
mapview(trianamapa)
mask <- st_read("Data/Distritos_de_Sevilla.shp")
plot(mask)
View(mask)
mask <- st_set_crs(mask, st_crs(trianamapa)
View(mask)
View(mask)
mapview(mask$geometry)
st_crs
st_crs(mask)
mask <- st_set_crs(mask, st_crs(trianamapa))
st_crs(mask)
mapview(mask$geometry)
View(trianamapa)
View(mask)
View(trianamapa)
plot(mask$geometry)
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
plot(vect(mask), add = TRUE)
plot(vect(mask))
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
plot(vect(mask), add = TRUE)
par(mar = rep(0, 4))
plot(st_geometry(trianamapa))
mask <- vect(mask)
mask <- vect(mask)
mask <- st_read("Data/Distritos_de_Sevilla.shp")
mask <- st_set_crs(mask, st_crs(trianamapa))
trianamapa <- st_filter(trianamapa, mask)
rm(trianamapa)
trianamapa <- opq('Triana, Sevilla') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
#Transformar poligonos a lineas
trianamapa <- osm_poly2line(trianamapa)
#Escoger solo las lineas
trianamapa <- trianamapa$osm_lines
#Recortar mapa
triana_bbox <- st_bbox(las)
trianamapa <- st_transform(trianamapa, crs = st_crs(triana_bbox))
trianamapa <- st_crop(trianamapa, triana_bbox)
mask <- st_geometry(mask)
View(mask)
View(mask)
plot(maskÃ§)
plot(mask)
mapview(mask)
plot(trianamapa)
trianavect <- st_as_sf(trianamapa)
mapview(trianavect)
calles <- trianavect |>
group_by(name) |>
summarise()
sombra.calles <- extract(triana.ground, vect(calles), fun = "mean", na.rm = TRUE)
sombra.calles <- round(sombra.calles, 2)
sombra.calles <- bind_cols(calles, sombra.calles)
View(sombra.calles)
library(RColorBrewer)
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
plot(vect(trianavect), add = TRUE)
plot(sombra.calles)
plot(sombra.calles$`2023-09-29.13`)
plot(sombra.calles[3])
plot(sombra.calles[4])
library(RColorBrewer)
plot(sombra.calles[4],
col = RColorBrewer::brewer.pal(8))
plot(sombra.calles[4],
col = RColorBrewer::brewer.pal(8, "Blues"))
plot(sombra.calles[4],
col = RColorBrewer::brewer.pal(9, "BuGn"))
plot(sombra.calles[4])
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
plot(vect(trianavect), add = TRUE)
plot(sombra.calles[4],
main = "Sombra por Calles 29-09-2023 13:00")
plot(sombra.calles[4],
main = "Sombra por Calles 29-09-2023 13:00",
col = RcolorBrewe::brewer.pal(8, "Blues"))
plot(sombra.calles[4],
main = "Sombra por Calles 29-09-2023 13:00",
col = RcolorBrewer::brewer.pal(8, "Blues"))
library(RColorBrewer)
install.packages("RcolorBrewer")
yes
install.packages("RcolorBrewer")
install.packages("RcolorBrewer")
library(RColorBrewer)
library(osmdata)
library(sf)
library(tidyverse)
library(ggspatial)
library(CityShadeMapper)
library(terra)
library(lidR)
library(rgl)
library(mapview)
plot(sombra.calles[4],
main = "Sombra por Calles 29-09-2023 13:00",
col = RcolorBrewer::brewer.pal(8, "Blues"))
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
library(RColorBrewer)
plot(triana.ground, y = 1, axes = FALSE,
col = RColorBrewer::brewer.pal(9, "YlOrRd"))
